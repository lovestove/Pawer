import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums.parse_mode import ParseMode
from aiogram.client.default import DefaultBotProperties

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
import sys
import os

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config_reader import config
from handlers import user_handlers, admin_handlers
from database.engine import init_db

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    logger.info('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
    init_db()

    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    logger.info('ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...')
    bot = Bot(
        token=config.BOT_TOKEN.get_secret_value(),
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )

    dp = Dispatcher()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã (–∞–¥–º–∏–Ω—ã –ø–µ—Ä–≤—ã–µ, —á—Ç–æ–±—ã –∏—Ö —Ñ–∏–ª—å—Ç—Ä —Å—Ä–∞–±–æ—Ç–∞–ª —Ä–∞–Ω—å—à–µ)
    dp.include_router(admin_handlers.router)
    dp.include_router(user_handlers.router)

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    await bot.delete_webhook(drop_pending_updates=True)

    logger.info('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    logger.info('–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏ Ctrl+C')

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        logger.info('üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')
    finally:
        await bot.session.close()


if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info('üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!')