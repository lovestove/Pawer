# """
# –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
# """
# from aiogram import Router, F
# from aiogram.filters import CommandStart, Command
# from aiogram.types import Message, CallbackQuery
# from aiogram.fsm.context import FSMContext
#
# from app.keyboards.inline import get_main_menu, get_pet_actions_kb
# from app.core.database import Database
# from app.keyboards.webapp import get_webapp_button
#
# router = Router()
#
#
# @router.message(CommandStart())
# async def cmd_start(message: Message, db: Database):
#     """–ö–æ–º–∞–Ω–¥–∞ /start"""
#     user_id = message.from_user.id
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∏—Ç–æ–º–µ—Ü
#     pet = await db.get_pet(user_id)
#
#     if pet:
#         await message.answer(
#             f"üåü –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –¥–æ—Ä–æ–≥–æ–π!\n\n"
#             f"–¢–≤–æ–π –ø–∏—Ç–æ–º–µ—Ü {pet['name']} –æ—á–µ–Ω—å —Å–∫—É—á–∞–ª! üíö\n"
#             f"–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–∑–∞–±–æ—Ç—å—Å—è –æ –Ω—ë–º!",
#             reply_markup=get_webapp_button()
#         )
#     else:
#         await message.answer(
#             f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
#             f"–Ø Pawer - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —É—Ö–æ–¥—É –∑–∞ —Ü–∏—Ñ—Ä–æ–≤—ã–º –ø–∏—Ç–æ–º—Ü–µ–º! üêæ\n\n"
#             f"–ó–∞–≤–æ–¥–∏ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞, –∑–∞–±–æ—Ç—å—Å—è –æ –Ω—ë–º, –∏–≥—Ä–∞–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã! ü™ô\n\n"
#             f"–û—Ç–∫—Ä—ã–≤–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—á–∏–Ω–∞–π —Å–≤–æ—ë –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ! ‚ú®",
#             reply_markup=get_webapp_button()
#         )
#
#
# @router.message(Command("app"))
# async def cmd_app(message: Message):
#     """–ö–æ–º–∞–Ω–¥–∞ /app - –æ—Ç–∫—Ä—ã—Ç—å Mini App"""
#     await message.answer(
#         "üêæ –û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ—ë–º –ø–∏—Ç–æ–º—Ü–µ!",
#         reply_markup=get_webapp_button()
#     )
#
#
# @router.message(Command("stats"))
# async def cmd_stats(message: Message, db: Database):
#     """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∏—Ç–æ–º—Ü–∞"""
#     user_id = message.from_user.id
#     pet = await db.get_pet(user_id)
#
#     if not pet:
#         await message.answer(
#             "–£ —Ç–µ–±—è –µ—â—ë –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞, –º–∏–ª—ã–π! üòä\n"
#             "–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∑–∞–≤–µ–¥–∏ —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞!",
#             reply_markup=get_webapp_button()
#         )
#         return
#
#     stats = pet['stats']
#     health_bar = create_bar(stats['health'])
#     happiness_bar = create_bar(stats['happiness'])
#     energy_bar = create_bar(stats['energy'])
#     hunger_bar = create_bar(stats['hunger'])
#
#     await message.answer(
#         f"üêæ <b>{pet['name']}</b> {pet['emoji']}\n\n"
#         f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
#         f"‚îú ‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {health_bar} {stats['health']:.0f}%\n"
#         f"‚îú üòä –°—á–∞—Å—Ç—å–µ: {happiness_bar} {stats['happiness']:.0f}%\n"
#         f"‚îú ‚ö° –≠–Ω–µ—Ä–≥–∏—è: {energy_bar} {stats['energy']:.0f}%\n"
#         f"‚îî üçñ –°—ã—Ç–æ—Å—Ç—å: {hunger_bar} {stats['hunger']:.0f}%\n\n"
#         f"üíé <b>–£—Ä–æ–≤–µ–Ω—å:</b> {pet['level']}\n"
#         f"‚ú® <b>–û–ø—ã—Ç:</b> {pet['xp']}/{pet['level'] * 100}\n"
#         f"ü™ô <b>–ú–æ–Ω–µ—Ç—ã:</b> {pet['coins']}\n\n"
#         f"üî• <b>–°–µ—Ä–∏—è:</b> {pet.get('streak', 1)} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
#         parse_mode="HTML",
#         reply_markup=get_webapp_button()
#     )
#
#
# @router.message(Command("shop"))
# async def cmd_shop(message: Message):
#     """–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"""
#     await message.answer(
#         "üè™ <b>–ú–∞–≥–∞–∑–∏–Ω Pawer</b>\n\n"
#         "–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –≤–∫—É—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üíö",
#         parse_mode="HTML",
#         reply_markup=get_webapp_button()
#     )
#
#
# @router.message(Command("help"))
# async def cmd_help(message: Message):
#     """–ü–æ–º–æ—â—å"""
#     await message.answer(
#         "‚ùì <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n\n"
#         "üêæ <b>–û—Å–Ω–æ–≤—ã:</b>\n"
#         "‚Ä¢ –ó–∞–≤–æ–¥–∏ –ø–∏—Ç–æ–º—Ü–∞ –∏ –¥–∞–π –µ–º—É –∏–º—è\n"
#         "‚Ä¢ –ö–æ—Ä–º–∏, –∏–≥—Ä–∞–π, –º–æ–π –∏ —É–∫–ª–∞–¥—ã–≤–∞–π —Å–ø–∞—Ç—å\n"
#         "‚Ä¢ –°–ª–µ–¥–∏ –∑–∞ —Å—Ç–∞—Ç–∞–º–∏: –∑–¥–æ—Ä–æ–≤—å–µ, —Å—á–∞—Å—Ç—å–µ, —ç–Ω–µ—Ä–≥–∏—è, —Å—ã—Ç–æ—Å—Ç—å\n\n"
#         "üéÆ <b>–î–µ–π—Å—Ç–≤–∏—è:</b>\n"
#         "‚Ä¢ üçñ –ö–æ—Ä–º–∏—Ç—å - –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—ã—Ç–æ—Å—Ç—å\n"
#         "‚Ä¢ üéæ –ò–≥—Ä–∞—Ç—å - –ø–æ–≤—ã—à–∞–µ—Ç —Å—á–∞—Å—Ç—å–µ\n"
#         "‚Ä¢ üõÅ –ú—ã—Ç—å - —É–ª—É—á—à–∞–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ\n"
#         "‚Ä¢ üò¥ –°–ø–∞—Ç—å - –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é\n\n"
#         "üí∞ <b>–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è:</b>\n"
#         "‚Ä¢ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã –∑–∞ —É—Ö–æ–¥\n"
#         "‚Ä¢ –ü–æ–∫—É–ø–∞–π –µ–¥—É –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ\n"
#         "‚Ä¢ –ü–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤—Ö–æ–¥\n\n"
#         "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>\n"
#         "‚Ä¢ –°—Ç–∞—Ç—ã –ø–∏—Ç–æ–º—Ü–∞ —Å–Ω–∏–∂–∞—é—Ç—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º\n"
#         "‚Ä¢ –ù–µ –∑–∞–±—ã–≤–∞–π –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –Ω—ë–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!\n"
#         "‚Ä¢ –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å - —Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n\n"
#         "üíö –¢–≤–æ–π –ø–∏—Ç–æ–º–µ—Ü - —ç—Ç–æ —Ç–≤–æ—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Ä–∞–¥–æ—Å—Ç—å!",
#         parse_mode="HTML",
#         reply_markup=get_webapp_button()
#     )
#
#
# @router.message(Command("daily"))
# async def cmd_daily(message: Message, db: Database):
#     """–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞"""
#     user_id = message.from_user.id
#     pet = await db.get_pet(user_id)
#
#     if not pet:
#         await message.answer(
#             "–£ —Ç–µ–±—è –µ—â—ë –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞, –¥–æ—Ä–æ–≥–æ–π! üòä",
#             reply_markup=get_webapp_button()
#         )
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É
#     can_claim, bonus = await db.check_daily_reward(user_id)
#
#     if not can_claim:
#         await message.answer(
#             "‚è∞ –¢—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É!\n"
#             "–ü—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤—ã–º –±–æ–Ω—É—Å–æ–º! üíö"
#         )
#         return
#
#     # –ù–∞—á–∏—Å–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É
#     await db.claim_daily_reward(user_id, bonus)
#
#     await message.answer(
#         f"üéÅ <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞!</b>\n\n"
#         f"–ü–æ–ª—É—á–µ–Ω–æ: +{bonus} ü™ô\n"
#         f"üî• –°–µ—Ä–∏—è: {pet.get('streak', 1)} –¥–Ω–µ–π\n\n"
#         f"–ü—Ä–æ–¥–æ–ª–∂–∞–π –∑–∞—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–ª—è –±–æ–ª—å—à–∏—Ö –±–æ–Ω—É—Å–æ–≤! üíö",
#         parse_mode="HTML"
#     )
#
#
# @router.message(Command("leaderboard"))
# async def cmd_leaderboard(message: Message, db: Database):
#     """–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"""
#     top_users = await db.get_leaderboard(limit=10)
#
#     if not top_users:
#         await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞ üòä")
#         return
#
#     text = "üèÜ <b>–¢–æ–ø-10 –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø–∏—Ç–æ–º—Ü–µ–≤</b>\n\n"
#
#     medals = ["ü•á", "ü•à", "ü•â"]
#     for i, user in enumerate(top_users, 1):
#         medal = medals[i - 1] if i <= 3 else f"{i}."
#         text += f"{medal} <b>{user['name']}</b> ‚Ä¢ –£—Ä.{user['level']} ‚Ä¢ {user['coins']}ü™ô\n"
#
#     await message.answer(text, parse_mode="HTML")
#
# 
# def create_bar(value: float, length: int = 10) -> str:
#     """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –±–∞—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–æ–≤"""
#     filled = int((value / 100) * length)
#     empty = length - filled
#
#     if value >= 70:
#         return "üü©" * filled + "‚¨ú" * empty
#     elif value >= 40:
#         return "üü®" * filled + "‚¨ú" * empty
#     else:
#         return "üü•" * filled + "‚¨ú" * empty
#
#
# @router.message(F.text)
# async def handle_text(message: Message):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
#     await message.answer(
#         "–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã, –¥–æ—Ä–æ–≥–æ–π! üòä\n"
#         "–ò—Å–ø–æ–ª—å–∑—É–π /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é, –∏–ª–∏ –æ—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!",
#         reply_markup=get_webapp_button()
#     )