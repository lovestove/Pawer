from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from ..core.config import GameConfig, settings

def get_main_menu(has_pet: bool) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –ø–∏—Ç–æ–º—Ü–∞"""
    buttons = [
        [InlineKeyboardButton(text="üêæ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üêæ", web_app={"url": settings.MINI_APP_URL})]
    ]
    if has_pet:
        buttons.extend([
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="profile"), InlineKeyboardButton(text="üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data="leaderboard")],
            [InlineKeyboardButton(text="üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å", callback_data="daily_reward"), InlineKeyboardButton(text="üë• –î—Ä—É–∑—å—è", callback_data="friends")]
        ])
    else:
        buttons.append([InlineKeyboardButton(text="‚ú® –°–æ–∑–¥–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞", callback_data="create_pet")])
    
    buttons.append([InlineKeyboardButton(text="üí∞ –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop"), InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_pet_type_keyboard(owned_eggs: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∏—Ü"""
    buttons = []
    for egg_type in owned_eggs:
        if pet_info := GameConfig.PET_TYPES.get(egg_type):
            buttons.append([InlineKeyboardButton(text=f"{pet_info['emoji']} {pet_info['name']}", callback_data=f"pettype_{egg_type}")])
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="toggle_notifications")
        ],
        [
            InlineKeyboardButton(text="üåç –Ø–∑—ã–∫", callback_data="change_language")
        ],
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ])
    return keyboard

def get_back_keyboard():
    """–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main")]
    ])
    return keyboard

def get_pet_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–∏—Ç–æ–º—Ü–µ–º"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üçñ –ü–æ–∫–æ—Ä–º–∏—Ç—å", callback_data="pet_feed"),
            InlineKeyboardButton(text="üíß –ù–∞–ø–æ–∏—Ç—å", callback_data="pet_water"),
            InlineKeyboardButton(text="üéæ –ü–æ–∏–≥—Ä–∞—Ç—å", callback_data="pet_play"),
        ],
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main")
        ]
    ])
    return keyboard

def get_coin_packages_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–∫–µ—Ç–∞–º–∏ –º–æ–Ω–µ—Ç"""
    buttons = []
    for i, pkg in enumerate(GameConfig.COIN_PACKAGES):
        bonus_text = f" (+{pkg['bonus']}% üî•)" if pkg['bonus'] > 0 else ""
        button_text = f"{pkg['coins']} ü™ô –∑–∞ {pkg['price_rub']}‚ÇΩ{bonus_text}"
        buttons.append([InlineKeyboardButton(text=button_text, callback_data=f"coinpkg_{i}")])
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_shop")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_gem_packages_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–∫–µ—Ç–∞–º–∏ –≥–µ–º–æ–≤"""
    buttons = []
    for i, pkg in enumerate(GameConfig.GEM_PACKAGES):
        button_text = f"{pkg['gems']} üíé –∑–∞ {pkg['price_rub']}‚ÇΩ"
        buttons.append([InlineKeyboardButton(text=button_text, callback_data=f"gempkg_{i}")])
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_shop")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_payment_method_keyboard(package_type: str, package_index: int):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    buttons = [
        [InlineKeyboardButton(text="‚≠ê –û–ø–ª–∞—Ç–∏—Ç—å Stars", callback_data=f"pay_stars_{package_type}_{package_index}")],
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ÆMoney", callback_data=f"pay_yoomoney_{package_type}_{package_index}")],
        [InlineKeyboardButton(text="üè¶ –û–ø–ª–∞—Ç–∏—Ç—å –°–ë–ü", callback_data=f"pay_sbp_{package_type}_{package_index}")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"buy_{package_type}s")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)
